env = Environment();

env['CXX'] = 'clang++'
env['CPPFLAGS'] = ['-std=c++11', '-Wall', '-Werror'];
env['LDFLAGS'] = [''];

debug = ARGUMENTS.get( 'debug', 0 );
if int( debug ): 
   env['CPPFLAGS'] += ['-ggdb', '-fno-omit-frame-pointer', '-O1'];
else:
    env['CPPFLAGS'] += ['-O2'] ;

env['LIBS'] = [];

env['CPPPATH'] = ['../../inc'];

meta = "../../src/tetra/meta/";

def createSources(sources):
    toRet = [];
    for source in sources:
        toRet += [ meta + source + '.cpp' ]
    return toRet;

def createTests(sources):
    toRet = [];
    for source in sources:
        toRet += [ meta + source + 'Test.cpp' ];
    return toRet;

sources = [ 'MetaData'
          , 'MetaRepository' 
          , 'Variant' 
          ];

tests = [ 'MetaData'
        , 'MetaConstructor'
        , 'MetaRepository'
        , 'Variant'
        ];

Default( env.Program( target = '../x64/meta',
                      source = ['../../src/Widget.cpp'] +
                               createSources( sources ) +
                               createTests( tests ) ) )

